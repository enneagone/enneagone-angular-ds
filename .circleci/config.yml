executors:
  node:
    docker:
      - image: circleci/node:10-browsers

aliases:
  restore_cache: &restore_cache
    restore_cache:
      name: Restore Npm Package Cache
      keys:
        - yarn-cache-netlify-{{ checksum "yarn.lock" }}

  install_node_modules: &install_node_modules
    run:
      name: Install dependencies
      command: yarn

  save_cache: &save_cache
    save_cache:
      name: Save NPM package cache
      key: yarn-cache-netlify-{{ checksum "yarn.lock" }}
      paths:
        - ./node_modules

version: 2.1

jobs:
  test:
    executor: node
    steps:
      - checkout
      - <<: *restore_cache
      - <<: *install_node_modules
      - <<: *save_cache
      - run:
          name: Test
          command: yarn test

  prettier:
    executor: node
    steps:
      - checkout
      - <<: *restore_cache
      - <<: *install_node_modules
      - <<: *save_cache
      - run:
          name: Prettify
          command: yarn format:check

  linter:
    executor: node
    steps:
      - checkout
      - <<: *restore_cache
      - <<: *install_node_modules
      - <<: *save_cache
      - run:
          name: Lint
          command: yarn lint

  build-library:
    executor: node
    steps:
      - checkout
      - <<: *restore_cache
      - <<: *install_node_modules
      - run:
          name: Build
          command: yarn build

  build-storybook:
    executor: node
    steps:
      - checkout
      - <<: *restore_cache
      - <<: *install_node_modules
      - run:
          name: Build
          command: yarn build-storybook
      - persist_to_workspace:
          root: ./
          paths:
            - storybook-static

  deploy-storybook:
    executor: node
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - <<: *restore_cache
      - <<: *install_node_modules
      - run:
          name: Install netlify-cli
          command: sudo npm install -g --silent netlify-cli
      - run:
          name: Deploy to Netlify
          command: netlify deploy --dir=./storybook-static -p

  release:
    executor: node
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - <<: *restore_cache
      - <<: *install_node_modules
      - run:
          name: Write npmrc
          command: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
      - run:
          name: release
          command: yarn release || true

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - prettier
      - linter
      - test:
          requires:
            - linter
            - prettier
      - build-storybook:
          requires:
            - test
      - build-library:
          requires:
            - test
      - deploy-storybook:
          requires:
            - build-storybook
          filters:
            branches:
              only: master
      - release:
          requires:
            - build-library
          filters:
            tags:
              only: /^*/
            branches:
              only: master
